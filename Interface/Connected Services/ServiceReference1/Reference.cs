//------------------------------------------------------------------------------
// <auto-generated>
//     Este código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações a este ficheiro poderão provocar um comportamento incorrecto e perder-se-ão se
//     o código for regenerado.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Interface.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Donator", Namespace="http://schemas.datacontract.org/2004/07/BloodCrowdService")]
    [System.SerializableAttribute()]
    public partial class Donator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirthDayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BloodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CentimetersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ImcField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double KilogramsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MothersMaidenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OccupationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatefullField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long TelephoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BirthDay {
            get {
                return this.BirthDayField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthDayField, value) != true)) {
                    this.BirthDayField = value;
                    this.RaisePropertyChanged("BirthDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BloodType {
            get {
                return this.BloodTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BloodTypeField, value) != true)) {
                    this.BloodTypeField = value;
                    this.RaisePropertyChanged("BloodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Centimeters {
            get {
                return this.CentimetersField;
            }
            set {
                if ((this.CentimetersField.Equals(value) != true)) {
                    this.CentimetersField = value;
                    this.RaisePropertyChanged("Centimeters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMail {
            get {
                return this.EMailField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailField, value) != true)) {
                    this.EMailField = value;
                    this.RaisePropertyChanged("EMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((object.ReferenceEquals(this.GuidField, value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Imc {
            get {
                return this.ImcField;
            }
            set {
                if ((this.ImcField.Equals(value) != true)) {
                    this.ImcField = value;
                    this.RaisePropertyChanged("Imc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Kilograms {
            get {
                return this.KilogramsField;
            }
            set {
                if ((this.KilogramsField.Equals(value) != true)) {
                    this.KilogramsField = value;
                    this.RaisePropertyChanged("Kilograms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LatitudeField, value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((object.ReferenceEquals(this.LongitudeField, value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MothersMaiden {
            get {
                return this.MothersMaidenField;
            }
            set {
                if ((object.ReferenceEquals(this.MothersMaidenField, value) != true)) {
                    this.MothersMaidenField = value;
                    this.RaisePropertyChanged("MothersMaiden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Occupation {
            get {
                return this.OccupationField;
            }
            set {
                if ((object.ReferenceEquals(this.OccupationField, value) != true)) {
                    this.OccupationField = value;
                    this.RaisePropertyChanged("Occupation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sexo {
            get {
                return this.SexoField;
            }
            set {
                if ((object.ReferenceEquals(this.SexoField, value) != true)) {
                    this.SexoField = value;
                    this.RaisePropertyChanged("Sexo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Statefull {
            get {
                return this.StatefullField;
            }
            set {
                if ((object.ReferenceEquals(this.StatefullField, value) != true)) {
                    this.StatefullField = value;
                    this.RaisePropertyChanged("Statefull");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long TelephoneNumber {
            get {
                return this.TelephoneNumberField;
            }
            set {
                if ((this.TelephoneNumberField.Equals(value) != true)) {
                    this.TelephoneNumberField = value;
                    this.RaisePropertyChanged("TelephoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vehicle {
            get {
                return this.VehicleField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleField, value) != true)) {
                    this.VehicleField = value;
                    this.RaisePropertyChanged("Vehicle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShortDonator", Namespace="http://schemas.datacontract.org/2004/07/BloodCrowdService")]
    [System.SerializableAttribute()]
    public partial class ShortDonator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BloodTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BloodType {
            get {
                return this.BloodTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BloodTypeField, value) != true)) {
                    this.BloodTypeField = value;
                    this.RaisePropertyChanged("BloodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonators", ReplyAction="http://tempuri.org/IService1/GetDonatorsResponse")]
        Interface.ServiceReference1.Donator[] GetDonators();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonators", ReplyAction="http://tempuri.org/IService1/GetDonatorsResponse")]
        System.Threading.Tasks.Task<Interface.ServiceReference1.Donator[]> GetDonatorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsShort", ReplyAction="http://tempuri.org/IService1/GetDonatorsShortResponse")]
        Interface.ServiceReference1.ShortDonator[] GetDonatorsShort();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsShort", ReplyAction="http://tempuri.org/IService1/GetDonatorsShortResponse")]
        System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsShortAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewDonator", ReplyAction="http://tempuri.org/IService1/AddNewDonatorResponse")]
        bool AddNewDonator(Interface.ServiceReference1.Donator bd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddNewDonator", ReplyAction="http://tempuri.org/IService1/AddNewDonatorResponse")]
        System.Threading.Tasks.Task<bool> AddNewDonatorAsync(Interface.ServiceReference1.Donator bd);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoverDonator", ReplyAction="http://tempuri.org/IService1/RemoverDonatorResponse")]
        bool RemoverDonator(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoverDonator", ReplyAction="http://tempuri.org/IService1/RemoverDonatorResponse")]
        System.Threading.Tasks.Task<bool> RemoverDonatorAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByNumber", ReplyAction="http://tempuri.org/IService1/GetDonatorsByNumberResponse")]
        Interface.ServiceReference1.Donator[] GetDonatorsByNumber(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByNumber", ReplyAction="http://tempuri.org/IService1/GetDonatorsByNumberResponse")]
        System.Threading.Tasks.Task<Interface.ServiceReference1.Donator[]> GetDonatorsByNumberAsync(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByName", ReplyAction="http://tempuri.org/IService1/GetDonatorsByNameResponse")]
        Interface.ServiceReference1.ShortDonator[] GetDonatorsByName(string nome);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByName", ReplyAction="http://tempuri.org/IService1/GetDonatorsByNameResponse")]
        System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsByNameAsync(string nome);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByAge", ReplyAction="http://tempuri.org/IService1/GetDonatorsByAgeResponse")]
        Interface.ServiceReference1.ShortDonator[] GetDonatorsByAge(string age);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByAge", ReplyAction="http://tempuri.org/IService1/GetDonatorsByAgeResponse")]
        System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsByAgeAsync(string age);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByBloodType", ReplyAction="http://tempuri.org/IService1/GetDonatorsByBloodTypeResponse")]
        Interface.ServiceReference1.ShortDonator[] GetDonatorsByBloodType(string bloodType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByBloodType", ReplyAction="http://tempuri.org/IService1/GetDonatorsByBloodTypeResponse")]
        System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsByBloodTypeAsync(string bloodType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByBloodTypeCompatibility", ReplyAction="http://tempuri.org/IService1/GetDonatorsByBloodTypeCompatibilityResponse")]
        Interface.ServiceReference1.ShortDonator[] GetDonatorsByBloodTypeCompatibility(string bloodType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByBloodTypeCompatibility", ReplyAction="http://tempuri.org/IService1/GetDonatorsByBloodTypeCompatibilityResponse")]
        System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsByBloodTypeCompatibilityAsync(string bloodType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByImcMenorOuIgual", ReplyAction="http://tempuri.org/IService1/GetDonatorsByImcMenorOuIgualResponse")]
        Interface.ServiceReference1.ShortDonator[] GetDonatorsByImcMenorOuIgual(string imc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByImcMenorOuIgual", ReplyAction="http://tempuri.org/IService1/GetDonatorsByImcMenorOuIgualResponse")]
        System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsByImcMenorOuIgualAsync(string imc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByImcMaiorOuIgual", ReplyAction="http://tempuri.org/IService1/GetDonatorsByImcMaiorOuIgualResponse")]
        Interface.ServiceReference1.ShortDonator[] GetDonatorsByImcMaiorOuIgual(string imc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDonatorsByImcMaiorOuIgual", ReplyAction="http://tempuri.org/IService1/GetDonatorsByImcMaiorOuIgualResponse")]
        System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsByImcMaiorOuIgualAsync(string imc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CalcularImc", ReplyAction="http://tempuri.org/IService1/CalcularImcResponse")]
        double CalcularImc(string peso, string altura);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CalcularImc", ReplyAction="http://tempuri.org/IService1/CalcularImcResponse")]
        System.Threading.Tasks.Task<double> CalcularImcAsync(string peso, string altura);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Interface.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Interface.ServiceReference1.IService1>, Interface.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Interface.ServiceReference1.Donator[] GetDonators() {
            return base.Channel.GetDonators();
        }
        
        public System.Threading.Tasks.Task<Interface.ServiceReference1.Donator[]> GetDonatorsAsync() {
            return base.Channel.GetDonatorsAsync();
        }
        
        public Interface.ServiceReference1.ShortDonator[] GetDonatorsShort() {
            return base.Channel.GetDonatorsShort();
        }
        
        public System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsShortAsync() {
            return base.Channel.GetDonatorsShortAsync();
        }
        
        public bool AddNewDonator(Interface.ServiceReference1.Donator bd) {
            return base.Channel.AddNewDonator(bd);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewDonatorAsync(Interface.ServiceReference1.Donator bd) {
            return base.Channel.AddNewDonatorAsync(bd);
        }
        
        public bool RemoverDonator(string id) {
            return base.Channel.RemoverDonator(id);
        }
        
        public System.Threading.Tasks.Task<bool> RemoverDonatorAsync(string id) {
            return base.Channel.RemoverDonatorAsync(id);
        }
        
        public Interface.ServiceReference1.Donator[] GetDonatorsByNumber(string number) {
            return base.Channel.GetDonatorsByNumber(number);
        }
        
        public System.Threading.Tasks.Task<Interface.ServiceReference1.Donator[]> GetDonatorsByNumberAsync(string number) {
            return base.Channel.GetDonatorsByNumberAsync(number);
        }
        
        public Interface.ServiceReference1.ShortDonator[] GetDonatorsByName(string nome) {
            return base.Channel.GetDonatorsByName(nome);
        }
        
        public System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsByNameAsync(string nome) {
            return base.Channel.GetDonatorsByNameAsync(nome);
        }
        
        public Interface.ServiceReference1.ShortDonator[] GetDonatorsByAge(string age) {
            return base.Channel.GetDonatorsByAge(age);
        }
        
        public System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsByAgeAsync(string age) {
            return base.Channel.GetDonatorsByAgeAsync(age);
        }
        
        public Interface.ServiceReference1.ShortDonator[] GetDonatorsByBloodType(string bloodType) {
            return base.Channel.GetDonatorsByBloodType(bloodType);
        }
        
        public System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsByBloodTypeAsync(string bloodType) {
            return base.Channel.GetDonatorsByBloodTypeAsync(bloodType);
        }
        
        public Interface.ServiceReference1.ShortDonator[] GetDonatorsByBloodTypeCompatibility(string bloodType) {
            return base.Channel.GetDonatorsByBloodTypeCompatibility(bloodType);
        }
        
        public System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsByBloodTypeCompatibilityAsync(string bloodType) {
            return base.Channel.GetDonatorsByBloodTypeCompatibilityAsync(bloodType);
        }
        
        public Interface.ServiceReference1.ShortDonator[] GetDonatorsByImcMenorOuIgual(string imc) {
            return base.Channel.GetDonatorsByImcMenorOuIgual(imc);
        }
        
        public System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsByImcMenorOuIgualAsync(string imc) {
            return base.Channel.GetDonatorsByImcMenorOuIgualAsync(imc);
        }
        
        public Interface.ServiceReference1.ShortDonator[] GetDonatorsByImcMaiorOuIgual(string imc) {
            return base.Channel.GetDonatorsByImcMaiorOuIgual(imc);
        }
        
        public System.Threading.Tasks.Task<Interface.ServiceReference1.ShortDonator[]> GetDonatorsByImcMaiorOuIgualAsync(string imc) {
            return base.Channel.GetDonatorsByImcMaiorOuIgualAsync(imc);
        }
        
        public double CalcularImc(string peso, string altura) {
            return base.Channel.CalcularImc(peso, altura);
        }
        
        public System.Threading.Tasks.Task<double> CalcularImcAsync(string peso, string altura) {
            return base.Channel.CalcularImcAsync(peso, altura);
        }
    }
}
